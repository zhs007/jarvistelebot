type User {
    nickName: String!
    userID: ID!
    userName: ID!
    lastMsgID: Int64!
    scripts: [String]
    fileTemplates: [String]
}

type UserList {
    snapshotID: Int64!
    endIndex: Int!
    maxIndex: Int!
    users: [User]
}

type File {
    filename: String!
    strData: String!
    fileType: String!
}

type Message {
    chatID: ID!
    from: User
    to: User
    text: String
    timeStamp: Timestamp
    msgID: String
    options: [String]
    selected: Int
    file: File
}

type UserScript {
    scriptName: ID!
    file: File
}

type UserMessageChunk {
    from: User
    msgs: [Message]
}

type Query {
    msg(chatID: ID!): Message!

    user(userID: ID!): User!
    userWithUserName(userName: ID!): User!

    users(snapshotID: Int64!, beginIndex: Int!, nums: Int!): UserList!

    userScript(userID: ID!, scriptName: ID!): UserScript!
}

type Mutation {
    newMsg(msg: Message!): Message!

    updUser(user: User!): User!

    updUserScript(userID: ID!, scriptName: ID!, file: File!): UserScript!
}