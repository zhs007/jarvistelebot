type User {
    nickName: String!
    userID: ID!
    userName: ID!
    lastMsgID: Int64!
}

type Message {
    chatID: ID!
    from: User
    to: User
    text: String
    timeStamp: Timestamp
    msgID: String
    options: [String]
    selected: Int
}

type UserMessageChunk {
    from: User
    msgs: [Message]
}

type Query {
    msg(chatID: ID!): Message!

    users(): [User]!
}

type Mutation {
    newMsg(chatID: ID!, fromNickName: String!, fromUserID: ID!, text: String!, timeStamp: Timestamp!): Message!

    updUser(nickName: String!, userID: ID!, userName: ID!, lastMsgID: Int64!): User!
}