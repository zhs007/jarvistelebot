type User {
    nickName: String!
    userID: ID!
    userName: ID!
    lastMsgID: Int64!
}

type UserList {
    snapshotID: Int64!
    endIndex: Int!
    maxIndex: Int!
    users: [User]
}

type File {
    filename: String!
    strData: String!
    fileType: String!
}

type Message {
    chatID: ID!
    from: User
    to: User
    text: String
    timeStamp: Timestamp
    msgID: String
    options: [String]
    selected: Int
    file: File
}

type UserScript {
    scriptName: ID!
    file: File
    jarvisNodeName: String!
}

type UserScriptList {
    snapshotID: Int64!
    endIndex: Int!
    maxIndex: Int!
    scripts: [UserScript]
}

type UserFileTemplate {
    fileTemplateName: ID!
    jarvisNodeName: String!
    fullPath: String!
    subfilesPath: String!
}

type UserFileTemplateList {
    snapshotID: Int64!
    endIndex: Int!
    maxIndex: Int!
    templates: [UserFileTemplate]
}

type UserMessageChunk {
    from: User
    msgs: [Message]
}

type Query {
    msg(chatID: ID!): Message!

    user(userID: ID!): User!
    userWithUserName(userName: ID!): User!

    users(snapshotID: Int64!, beginIndex: Int!, nums: Int!): UserList!

    userScript(userID: ID!, scriptName: ID!): UserScript!

    userScripts(userID: ID!, jarvisNodeName: String!): UserScriptList!

    fileTemplate(userID: ID!, fileTemplateName: ID!): UserFileTemplate!
    
    fileTemplates(userID: ID!, jarvisNodeName: String!): UserFileTemplateList!
}

type Mutation {
    newMsg(msg: Message!): Message!

    updUser(user: User!): User!
    updUserName(user: User!, userName: String!): User!

    updUserScript(userID: ID!, jarvisNodeName: String!, scriptName: ID!, file: File!): UserScript!
    removeUserScript(userID: ID!, scriptName: ID!) : String!

    updFileTemplate(userID: ID!, fileTemplateName: ID!, jarvisNodeName: String!, fullPath: String!, subfilesPath: String!): UserFileTemplate!
    removeFileTemplate(userID: ID!, fileTemplateName: ID!) : String!
}