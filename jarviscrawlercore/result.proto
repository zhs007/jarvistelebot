syntax = "proto3";
package jarviscrawlercore;

// ParagraphType - paragraph type
enum ParagraphType {
    PT_NULL = 0;
    PT_TEXT = 1;
    PT_IMAGE = 2;
    PT_HEADLINE = 3;
    PT_POSTLIST = 4;
    PT_COMMENT = 5;
}

// ImageInfo - image info
message ImageInfo {
    string hashName = 1;
    string url = 2;
    int32 width = 3;
    int32 height = 4;
    bytes data = 5;
}

// Paragraph - paragraph
message Paragraph {
    ParagraphType pt = 1;
    string imgHashName = 2;
    string text = 3;
    string imgURL = 4;
}

// ExportArticleResult - export article result
message ExportArticleResult {
    string title = 1;
    string author = 2;
    string writeTime = 3;
    string article = 4;
    string url = 5;
    repeated ImageInfo imgs = 6;
    ImageInfo titleImage = 7;
    repeated string tags = 8;
    repeated Paragraph paragraphs = 9;
    string summary = 10;
}

// Article - article
message Article {
    string title = 1;
    string author = 2;
    string writeTime = 3;
    string summary = 4;
    string url = 5;
    ImageInfo image = 6;
    string secondTitle = 7;
    bool premium = 8;
    string lang = 9;
}

// ArticleList - article list
message ArticleList {
    repeated Article articles = 1;
}

// ConfluenceUpdateItem - confluence all updates - item
message ConfluenceUpdateItem {
    string title = 1;
    string url = 2;
    string summary = 3;
}

// ConfluenceUpdateGrouping - confluence all updates - grouping
message ConfluenceUpdateGrouping {
    string author = 1;
    repeated ConfluenceUpdateItem items = 2;
}

// ConfluenceAllUpdates - confluence all updates
message ConfluenceAllUpdates {
    repeated ConfluenceUpdateGrouping updates = 1;
}

// RequestTranslate - request translate
message RequestTranslate {
    // text - source text
    string text = 1;
    // platform - it's like google
    string platform = 2;
    // srcLang - source language
    string srcLang = 3;
    // destLang - destination language
    string destLang = 4;
}

// ReplyTranslate - reply translate
message ReplyTranslate {
    // text - destination text
    string text = 1;
}

// RequestArticle - request article
message RequestArticle {
    // url
    string url = 1;
    // is need attach jquery
    bool attachJQuery = 2;
}

// ReplyArticle - reply article
message ReplyArticle {
    // result
    ExportArticleResult result = 1;
    // totalLength - If the message is too long, it will send data in multiple msg, this is the total length.
    int32 totalLength = 2;
    // curStart - The starting point of the current data (in bytes).
    int32 curStart = 3;
    // curLength - The length of the current data (in bytes).
    int32 curLength = 4;
    // hashData - This is the hash of each paragraph.
    string hashData = 5;
    // totalHashData - If multiple messages return data, this is the hash value of all data, only sent in the last message.
    string totalHashData = 6;
    // data
    bytes data = 7;
}

// RequestArticles - request articles
message RequestArticles {
    // url
    string url = 1 [deprecated = true];
    // is need attach jquery
    bool attachJQuery = 2 [deprecated = true];
    // website
    string website = 3;
}

// ReplyArticles - reply articles
message ReplyArticles {
    // articles
    ArticleList articles = 1;
}

// RequestDTData - request DT Data
message RequestDTData {
    // mode
    string mode = 1;
    // startTime
    string startTime = 2;
    // endTime
    string endTime = 3;
}

// DTBusinessGameReport - 
message DTBusinessGameReport {
    // businessid
    string businessid = 1;
    // gamecode
    string gamecode = 2;
    // totalWin
    float totalWin = 3;
    // totalBet
    float totalBet = 4;
    // gameNums
    int32 gameNums = 5;
    // currency
    string currency = 6;
}

// DTTodayGameData - 
message DTTodayGameData {
    // totalWin
    float totalWin = 1;
    // totalBet
    float totalBet = 2;
    // gameNums
    int32 gameNums = 3;
}

// ReplyDTData - reply DT Data
message ReplyDTData {
    // gameReport
    repeated DTBusinessGameReport gameReports = 1;
    // todayGameData
    DTTodayGameData todayGameData = 2;
}

// JarvisCrawlerService - JarvisCrawler service
service JarvisCrawlerService {
    // translate - translate text
    rpc translate(RequestTranslate) returns (ReplyTranslate) {}
    // exportArticle - export article
    rpc exportArticle(RequestArticle) returns (stream ReplyArticle) {}    
    // getArticles - get articles
    rpc getArticles(RequestArticles) returns (ReplyArticles) {}

    // getDTData - get DT data
    rpc getDTData(RequestDTData) returns (ReplyDTData) {}    
}